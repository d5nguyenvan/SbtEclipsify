=SbtEclipsify

Plugin for sbt (http://code.google.com/p/simple-build-tool/) for creating .classpath and .project files for the Ecipse IDE (http://www.eclipse.org). 
It is currently in Beta state and is not feature complete

==Setting up the Plugin
In order to use the plugin you need to obtain the plugin by building it (sorry no public release to a repo yet :( )
Use git to download it and use sbt to build it.

Details will follow soon...

==Requirements
If you have scala sources in your project you need to have the Scala Eclipse plugin installed or else you will not be able to work with the generated project.
This plugin is currently only compiled against Scala 2.7.7 and there is no crossbuild in place as of yet.

==Supported properties
The following properties can be added to the build.properties of your project in order to control the output of the plugin
sbt.dependency=boolean (default: false) => if set to true puts the sbt jar on the classpath of the project this is needed if you are creating actions or plugins for sbt
project.description= (default: Projectname Projectversin) => Set this to the text used to describe your project. this is directly transfered to the .projectfile's project description tag.

==Using the Plugin in your own project
You need to create a plugin definition in your sbt project. 
The plugin definition can be any Scala class that extends PluginDefinition and is located in the plugins directory in the projects subfolder of your sbt project.

Example:
If your project is located at MySbtProject/

then create the plugins directory
mkdir MySbtProject/project/plugins

next create a file name MySbtProjectPlugins.scala and add the following text to it:
import sbt._

class MySbtProjectPlugins(info: ProjectInfo) extends PluginDefinition(info) {
      lazy val eclipsify = "de.element34" % "sbteclipsify" % "0.2.0"
}

This will enable your project to get the plugin in order to use it you need to add it to your project defintion. 
Open your project definition file, most likley "MySbtProject.scala" in "project/build/" folder, and add the SbtEclipsifyPlugin trait.

import sbt._
import de.element34.sbteclipsify._

class MySbtProject(info: ProjectInfo) extends DefaultProject(info) with SbtEclipsifyPlugin {
      // the project definition here
}

After reloading the project you should have a new action named "eclipsify" which will generate a .project and a .classpath file in the MySbtProject folder.

Now all you need to do is import the Project into your Eclipse workspace as an existing Project and everything should work.


